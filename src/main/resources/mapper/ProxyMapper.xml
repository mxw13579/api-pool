<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fufu.apipool.mapper.ProxyMapper">
    <resultMap id="ProxyEntityMap" type="com.fufu.apipool.entity.ProxyEntity">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="proxyUrl" column="proxy_url"/>
        <result property="source" column="source"/>
        <result property="address" column="address"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="deletedAt" column="deleted_at"/>
        <result property="createdBy" column="created_by"/>
        <result property="updatedBy" column="updated_by"/>
        <result property="deletedBy" column="deleted_by"/>
    </resultMap>

    <select id="selectById" resultMap="ProxyEntityMap">
        SELECT * FROM proxy WHERE id = #{id} AND deleted_at IS NULL
    </select>

    <select id="selectAll" resultMap="ProxyEntityMap">
        SELECT * FROM proxy WHERE deleted_at IS NULL
    </select>

    <insert id="insert" parameterType="com.fufu.apipool.entity.ProxyEntity">
        INSERT INTO proxy
        (name, proxy_url, source, address, status, created_at, updated_at, created_by, updated_by, deleted_by)
        VALUES
            (#{name}, #{proxyUrl}, #{source}, #{address}, #{status}, #{createdAt}, #{updatedAt}, #{createdBy}, #{updatedBy}, #{deletedBy})
    </insert>

    <select id="getLastInsertId" resultType="long">
        SELECT last_insert_rowid()
    </select>


    <update id="update" parameterType="com.fufu.apipool.entity.ProxyEntity">
        UPDATE proxy
        SET name=#{name}, proxy_url=#{proxyUrl}, source=#{source},
            address=#{address}, status=#{status},
            created_at=#{createdAt}, updated_at=#{updatedAt},
            created_by=#{createdBy}, updated_by=#{updatedBy}, deleted_by=#{deletedBy}
        WHERE id=#{id} AND deleted_at IS NULL
    </update>


    <!-- 逻辑删除 -->
    <update id="deleteById">
        UPDATE proxy
        SET deleted_at=CURRENT_TIMESTAMP
        WHERE id=#{id} AND deleted_at IS NULL
    </update>

    <!-- 批量逻辑删除 -->
    <update id="deleteByIds">
        UPDATE proxy
        SET deleted_at=CURRENT_TIMESTAMP
        WHERE id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND deleted_at IS NULL
    </update>
</mapper>
